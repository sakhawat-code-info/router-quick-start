Clint Side
---------------------------------------------------------

githab project name 

npm create vite@latest route-five-hours-project -- --template react

cd ...

npm install react-router-dom localforage match-sorter sort-by
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
npm i -D daisyui@latest
npm install --save prop-types
npm install --save react-toastify
npm install react-icons --save
npm install sweetalert2

content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],


plugins: [require("daisyui")],

env: { browser: true, es2020: true, node: true },

@tailwind base;
@tailwind components;
@tailwind utilities;

npm run dev

------------------------------------------------------------------------
main.jsx

import React from 'react'
import ReactDOM from 'react-dom/client'
import { RouterProvider } from "react-router-dom";
import './index.css'
import { router } from './Routes/AllRoutes';

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <RouterProvider router={router} />
  </React.StrictMode>,
)
--------------------------------------------------------------------------
routes.jsx

import { createBrowserRouter } from "react-router-dom";
import Root from "../LayOut/Root";
import ErrorPage from "../Pages/ErrorPage";
import App from "../App";

export const router = createBrowserRouter([
    {
        path: "/",
        element: <Root />,
        errorElement: <ErrorPage />,
        children: [
            {
                path: "/",
                element: <App />,
            },
        ],
    },
]);

-----------------------------------------------------------
import React from 'react';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

toast("Wow so easy !");


<ToastContainer />
--------------------------------------------------------------------------


import PropTypes from 'prop-types';

MyComponent.propTypes = {
  myProp: PropTypes.bool
};


------------------------------------------------------------------
------------------------------------------------------------------
server site 

-----------------------------------------------------------------------------------------------------
mkdir namePlz
cd namePlz

npm init -y
npm install i express cors mongodb dotenv 
npm i nodemon

package.json
  "scripts": {
    "start": "node index.js",


nodemon index.js

------------------------------------------------------------
index.js

const express = require('express');
const cors = require('cors');
const app = express()
const port = process.env.PORT || 5000

// middleware
app.use(cors());
app.use(express.json());



app.get('/', (req, res) => {
    res.send('Hello World!')
})

app.listen(port, () => {
    console.log(`Example app listening on port ${port}`)
})

-----------------------------------------------------------------
    // Password Validation
    if (
      !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{6,}$/.test(
        password
      )
    ) {
    
      toast.error(
        "password must be have at least 6 characters,a capital & spacial letter,one number"
      )
      return;
    }
    // Email Validation
    if (!/^\w+([.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email)) {
      toast.error("Please enter a valid email");
      return;
    }




